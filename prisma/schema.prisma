// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Firma {
  id    Int     @default(autoincrement()) @id
  nome String  
  email String  @unique
  telefone String  @unique
  rua String  
  cidade String  
  estado String  
  bairro String  
  cep String  
  numero String  

  usuarios Usuario[]

  criadoEm DateTime @default(now())
  atualizadoEm DateTime?
  removidoEm DateTime? 
}

model Usuario {
  id    Int     @default(autoincrement()) @id
  nome String  
  email String  @unique
  login String  @unique
  senha String  
  telefone String  @unique
  cpf String  @unique
  rg String  @unique
  cargo String  
  rua String  
  cidade String  
  estado String  
  bairro String  
  cep String  
  numero String  
  firma   Firma   @relation(fields: [firmaID], references: [id])
  firmaID Int

  criadoPor Int 
  criadoEm DateTime @default(now())
  atualizadoPor Int? 
  atualizadoEm DateTime?
  removidoPor Int? 
  removidoEm DateTime?
  
  tiposProcessos TipoProcesso[]
  formulariosPadrao FormularioPadrao[]
  processos Processo[]
  formulariosPreenchidos FormularioPreenchido[]
  clientes Cliente[]
  documentos Documento[]
  lacamentos LancamentoProcesso[]
  status Status[]
}


model TipoProcesso {
  id    Int     @default(autoincrement()) @id
  nome String  
  descricao String  

  userCriador   Usuario   @relation(fields: [criadoPor], references: [id])
  criadoPor Int 
  criadoEm DateTime @default(now())
  atualizadoPor Int? 
  atualizadoEm DateTime?
  removidoPor Int? 
  removidoEm DateTime?

  formulariosPadrao FormularioPadrao[]
  processos Processo[]
}


model FormularioPadrao {
  id    Int     @default(autoincrement()) @id
  nome String  
  url String  
  formato String  
  processo TipoProcesso @relation(fields: [tipoProcessoID], references: [id])
  tipoProcessoID Int  

  userCriador   Usuario   @relation(fields: [criadoPor], references: [id])
  criadoPor Int 
  criadoEm DateTime @default(now()) 
  atualizadoPor Int? 
  atualizadoEm DateTime?
  removidoPor Int? 
  removidoEm DateTime?
}

model Processo {
  id    Int     @default(autoincrement()) @id
  nome String 
  descricao String 
  observacao String 
  status Status @relation(fields: [statusID], references: [id])
  statusID Int
  prazo DateTime 
  tipoProcesso TipoProcesso @relation(fields: [tipoProcessoID], references: [id])
  tipoProcessoID Int  
  cliente Cliente @relation(fields: [clienteID], references: [id])
  clienteID Int  


  userCriador   Usuario   @relation(fields: [criadoPor], references: [id])
  criadoPor Int 
  criadoEm DateTime @default(now()) 
  atualizadoPor Int? 
  atualizadoEm DateTime?
  removidoPor Int? 
  removidoEm DateTime?

  formularioPreenchido FormularioPreenchido[]
  lancamentos LancamentoProcesso[]
}



model FormularioPreenchido {
  id    Int     @default(autoincrement()) @id
  nome String  
  url String  
  formato String  
  processo Processo @relation(fields: [processoID], references: [id])
  processoID Int  

  userCriador   Usuario   @relation(fields: [criadoPor], references: [id])
  criadoPor Int 
  criadoEm DateTime @default(now())
  atualizadoPor Int? 
  atualizadoEm DateTime?
  removidoPor Int? 
  removidoEm DateTime?
}

model Cliente {
  id    Int     @default(autoincrement()) @id
  nome String  
  email String  @unique
  telefone String  @unique
  cpf String  @unique
  rg String  @unique
  cnpj String  
  rua String  
  cidade String  
  estado String  
  bairro String  
  cep String  
  numero String  

  userCriador   Usuario   @relation(fields: [criadoPor], references: [id])
  criadoPor Int 
  criadoEm DateTime @default(now()) 
  atualizadoPor Int? 
  atualizadoEm DateTime?
  removidoPor Int? 
  removidoEm DateTime?

  documentos Documento[]
  processos Processo[]
}


model Documento {
  id    Int     @default(autoincrement()) @id
  nome String  
  url String  
  formato String  
  cliente Cliente @relation(fields: [clienteID], references: [id])
  clienteID Int  

  userCriador   Usuario   @relation(fields: [criadoPor], references: [id])
  criadoPor Int 
  criadoEm DateTime @default(now()) 
  atualizadoPor Int? 
  atualizadoEm DateTime?
  removidoPor Int? 
  removidoEm DateTime?
}


model LancamentoProcesso {
  id    Int     @default(autoincrement()) @id
  nome String 
  descricao String 
  status Status @relation(fields: [statusID], references: [id])
  statusID Int
  prazo DateTime 
  processo Processo @relation(fields: [processoID], references: [id])
  processoID Int  

  userCriador   Usuario   @relation(fields: [criadoPor], references: [id])
  criadoPor Int 
  criadoEm DateTime @default(now()) 
  atualizadoPor Int? 
  atualizadoEm DateTime?
  removidoPor Int? 
  removidoEm DateTime?
}

model Status {
  id    Int     @default(autoincrement()) @id
  nome String 
  
  userCriador   Usuario   @relation(fields: [criadoPor], references: [id])
  criadoPor Int 
  criadoEm DateTime @default(now()) 
  atualizadoPor Int? 
  atualizadoEm DateTime?
  removidoPor Int? 
  removidoEm DateTime?
  
  lancamentos LancamentoProcesso[]
  processos Processo[]
}